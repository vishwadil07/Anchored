############## Note 1: Although we have tried to automate the whhole program, 
###there are places where following specification have been used:#######

########### 1. No. of items = 8
########### 2. No. of task per respondent = 6
########### 3. No. of items per task = 4

############## Note 2: The program can be modified by few minor changes for any desired number of above specification###

rm(list = ls())
library(reshape)
library(plyr)

###################### functions to be used ###############################

###################### Restructure ###############################
Restructure <- function(df,v){
  z <- melt(df, id=v)
  y <- z[order(z$id),]
  return(y)
}

###################### Rename ###############################

rename <- function(df1,u1,v1){
  oldnames=u1
  newnames=v1
  for(i in 1:length(u1))names(df1)[names(df1)==oldnames[i]]=newnames[i]
  return(df1)
}

################## Loading maxdiff Chosen shown data #######################

max.diff.design <- read.csv("max.diff.design.csv")
shown <- read.csv("shown.csv")
chosen <- read.csv("chosen.csv")

Task.No <- max(max.diff.design$Set)
Concept.No <- length(max.diff.design) - 2 # -2 bcoz first row is version and second is set
Attr.No <- max(max.diff.design[,2:length(max.diff.design)])

################## Splitting best/worst/anchor shown #######################

chosenb <- chosen[c("id", "respid", "versions","b1","b2","b3","b4","b5","b6")]
chosenw <- chosen[c("id", "respid", "versions","w1","w2","w3","w4","w5","w6")]
chosena <- chosen[c("id", "respid", "versions","a1","a2","a3","a4","a5","a6")]

##################For 4 times best/worst we need to create below matrix#######

db <- matrix(rep(1),nrow = dim(chosenb)[1],ncol = Concept.No)
dw <- matrix(rep(1),nrow = dim(chosenw)[1],ncol = Concept.No)
da <- matrix(rep(1),nrow = dim(chosena)[1],ncol = Concept.No)

chosen_newb <- cbind(chosenb,db)
chosen_neww <- cbind(chosenw,dw)
chosen_newa <- cbind(chosena,da)

################## Replicating best/worst/anchor row equal to no. of concept #####################

cb <- Restructure(chosen_newb,c("id", "respid", "versions", "b1","b2","b3","b4","b5","b6"))
cw <- Restructure(chosen_neww,c("id", "respid", "versions", "w1","w2","w3","w4","w5","w6"))
ca <- Restructure(chosen_newa,c("id", "respid", "versions", "a1","a2","a3","a4","a5","a6"))

##################Deleting value and variable columns #####################

rb <- cb[c("id", "respid", "versions","b1","b2","b3","b4","b5","b6")]
rw <- cw[c("id", "respid", "versions","w1","w2","w3","w4","w5","w6")]
ra <- ca[c("id", "respid", "versions","a1","a2","a3","a4","a5","a6")]

################## Creating best/worst/anchor single column for each ###########################

hb <- Restructure(rb,c("id", "respid", "versions"))
hw <- Restructure(rw,c("id", "respid", "versions"))
ha <- Restructure(ra,c("id", "respid", "versions"))


################## Splitting shown according to tasks ####################################

shown1 <- shown[c("id", "respid", "versions","hidatta12_01", "hidatta22_01", "hidatta32_01", "hidatta42_01")]
shown2 <- shown[c("id", "respid", "versions","hidatta12_02", "hidatta22_02", "hidatta32_02", "hidatta42_02")]
shown3 <- shown[c("id", "respid", "versions","hidatta12_03", "hidatta22_03", "hidatta32_03", "hidatta42_03")]
shown4 <- shown[c("id", "respid", "versions","hidatta12_04", "hidatta22_04", "hidatta32_04", "hidatta42_04")]
shown5 <- shown[c("id", "respid", "versions","hidatta12_05", "hidatta22_05", "hidatta32_05", "hidatta42_05")]
shown6 <- shown[c("id", "respid", "versions","hidatta12_06", "hidatta22_06", "hidatta32_06", "hidatta42_06")]

################### Creating shown column for each task ###########################

z1 <- Restructure(shown1,c("id", "respid", "versions"))
z2 <- Restructure(shown2,c("id", "respid", "versions"))
z3 <- Restructure(shown3,c("id", "respid", "versions"))
z4 <- Restructure(shown4,c("id", "respid", "versions"))
z5 <- Restructure(shown5,c("id", "respid", "versions"))
z6 <- Restructure(shown6,c("id", "respid", "versions"))

################### Renaming  #########################################

hb <- rename(hb,c("variable","value"),c("bwa","chosen"))
hw <- rename(hw,c("variable","value"),c("bwa","chosen"))
ha <- rename(ha,c("variable","value"),c("bwa","chosen"))
z1 <- rename(z1,"value","shown1")
z2 <- rename(z2,"value","shown2")
z3 <- rename(z3,"value","shown3")
z4 <- rename(z4,"value","shown4")
z5 <- rename(z5,"value","shown5")
z6 <- rename(z6,"value","shown6")

################ Combining shown column ####################################

z <- cbind(z1[c("id", "respid", "versions","shown1")],
           z2["shown2"],z3["shown3"],z4["shown4"],z5["shown5"],z6["shown6"])

################ Creating Single shown column ####################################

c <- Restructure(z,c("id", "respid", "versions"))
c <- rename(c,"value","shown")

##################### Creating o/1 (Best choices) matrix ######################

scb <- cbind(c[c("id", "respid", "versions","shown")],
             hb[c("bwa","chosen")])

mb <- matrix(, nrow = dim(c)[1], ncol = max(c$shown))

for(i in 1:dim(scb)[1]){
  for(j in 1:max(scb$shown))
    if(scb$shown[i] == j)  {
      mb[i,j] = 1
    }
  else{
    mb[i,j] = 0
  }
}

dual.resp.b <- cbind(scb,mb)

sb <- vector("integer", dim(dual.resp.b)[1])

for(i in 1:Concept.No){
  sb[i] <- 1
}

for(i in 5:dim(dual.resp.b)[1]){
  sb[i] <- sb[i-Concept.No] + 2
}

dual.resp.b$s <- sb

dual.resp.b$pm <- c(rep('p',dim(dual.resp.b)[1]))

#################### Renaming chosen column to anchor for anchor data ##############

ha <- rename(ha,"chosen","anchor")

#################### Adding anchor column in best data ######################################

dual.resp.ba <- cbind(dual.resp.b, ha["anchor"])

##################### Creating o/-1 (Worst choices) matrix ######################

scw <- cbind(c[c("id", "respid", "versions","shown")],
             hw[c("bwa","chosen")])

mw <- matrix(, nrow = dim(c)[1], ncol = max(c$shown))

for(i in 1:dim(scw)[1]){
  for(j in 1:max(scw$shown))
    if(scw$shown[i] == j)  {
      mw[i,j] = -1
    }
  else{
    mw[i,j] = 0
  }
}

dual.resp.w <- cbind(scw,mw)

sw <- vector("integer", dim(dual.resp.w)[1])

for(i in 1:Concept.No){
  sw[i] <- 2
}

for(i in (Concept.No + 1):dim(dual.resp.w)[1]){
  sw[i] <- sw[i-Concept.No] + 2
}

dual.resp.w$s <- sw

dual.resp.w$pm <- c(rep('m',dim(dual.resp.w)[1]))

#################### Adding anchor column to worst data ######################################

dual.resp.wa <- cbind(dual.resp.w, ha["anchor"])

##################### Combining Best / Worst matrix ######################

dual.resp.bwa <- rbind(dual.resp.ba,dual.resp.wa)

dual.resp.s <- dual.resp.bwa[order(dual.resp.bwa$s),]

##################### Adding Concept ######################

dual.resp.s$concept <- seq(from = 1,to = 4,by = 1)

################### Renaming #########################################

dual.resp.s <- rename(dual.resp.s,c("1","2","3","4","5","6","7","8"), 
                      c("Att1","Att2","Att3","Att4","Att5","Att6","Att7","Att8"))

dual.resp.with.anc <- dual.resp.s[c("respid","concept","Att1","Att2","Att3","Att4","Att5",
                                    "Att6","Att7","Att8", "anchor","shown","chosen", "pm")]

p <- dual.resp.with.anc

########### IF Anchor = 1 OR 2 ##################

design12 <- as.data.frame(setNames(replicate(length(p),numeric(0), simplify = F),colnames(p)))

counter1 <- 1
for(i in 1:dim(p)[1]){
  design12[counter1, ] <- p[i, ]
  counter1 <- counter1 + 1
  L2 <- which(p$concept[i]==Concept.No & (p$anchor[i]==1 | p$anchor[i]==2) & p$pm[i]=='m')
  if(length(L2)>0){
    design12[counter1, ] <- p[i, ]
    for(k in 0:4){
      design12[counter1+k, ] <- p[i-3+k,] 
    }
    counter1 <- counter1+k
  }
}


design12$v1 <- ifelse((design12$concept <= 4 & design12$pm == 'm' & (design12$anchor == 1 | design12$anchor == 2)),1,0)

for(i in 5:dim(design12)[1]){
  design12$v2[i] <- design12$v1[i] + design12$v1[i-4]
}

design12$v2[which(design12$v2 %in% NA)]<- 0 
design12$v3 <- ifelse(design12$v2 == 2,1,0)

############ Creating -1 to 1 #######################

design12.f <- design12

for(i in Concept.No:(3+Attr.No)){
  design12.f[,i] <- ifelse(((design12.f$v3 == 1) & (design12[,i] == -1)),1, design12[,i])
}

########### Adding Task ##############

for(i in unique(design12.f$respid)){
  temp.df <- subset(design12.f,design12.f$respid %in% i)
  j <- 1
  k <- 1
  while(j <= dim(temp.df)[1]){
    temp.df$task[j] <- k
    if((j %% 4) == 0){
      k <- k + 1
    }
    design12.f[which(design12.f$respid %in% i), "task"] <- temp.df$task
    j <- j+1
  }
}




for(i in 4:dim(design12.f)[1]){
  design12.f$v4[i] <- design12.f$v3[i] + design12.f$v3[i-3]
}

design12.f$v4[which(design12.f$v4 %in% NA)] <- 0 


design12.f <- design12.f[c("respid","task","concept","Att1","Att2","Att3","Att4","Att5",
                           "Att6","Att7","Att8", "anchor", "shown","chosen","pm","v4")]


design12.f.5 <- as.data.frame(setNames(replicate(length(design12.f),numeric(0), simplify = F),colnames(design12.f)))


v5 <- c(5,0,0,0,0,0,0,0,0)

counter13 <- 1
for(i in 1:dim(design12.f)[1]){
  design12.f.5[counter13, ] <- design12.f[i, ]
  counter13 <- counter13 + 1
  L15 <- which(design12.f$v4[i]==2)
  if(length(L15)>0){
    design12.f.5[counter13, ] <- design12.f[i, ]
    design12.f.5[counter13, 3:(3 + Attr.No)] <- v5
    counter13 <- counter13 + 1
  }
}


########### IF Anchor = 3 ###############

design3 <- as.data.frame(setNames(replicate(length(design12.f.5),numeric(0), simplify = F),colnames(design12.f.5)))

v6 <- c(5,0,0,0,0,0,0,0,0)

counter3 <- 1
for(i in 1:dim(design12.f.5)[1]){
  design3[counter3, ] <- design12.f.5[i, ]
  counter3 <- counter3 + 1
  L1 <- which(design12.f.5$concept[i]==4 & design12.f.5$anchor[i]==3)
  if(length(L1)>0){
    design3[counter3, ] <- design12.f.5[i, ]
    design3[counter3, 3:(3 + Attr.No)] <- v6
    counter3 <- counter3 + 1
  }
}

write.csv(design3,"design3.csv",row.names = F)

################### Adding response column ############################

design.final <- design3

design.final$response <- ifelse((design.final$shown==design.final$chosen) | 
                                  ((design.final$anchor == 3) & (design.final$concept == 5)),1,0)

design.final <- design.final[c("respid","task","concept","Att1","Att2","Att3","Att4","Att5",
                               "Att6","Att7","Att8", "response")]

write.csv(design.final,"design.final.csv",row.names = F)

